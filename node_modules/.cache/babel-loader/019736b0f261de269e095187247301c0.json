{"ast":null,"code":"import Web3 from 'web3';\nimport ContractInterface from '../build/contracts/Wikipedia.json';\nimport { connectEthereum } from '../store/reducers/root';\n\nconst connect = async dispatch => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n\n    try {\n      const [account] = await window.ethereum.enable();\n      const contract = new window.web3.eth.Contract(ContractInterface.abi, ContractInterface.networks['5777'].address, {\n        from: account\n      });\n      dispatch(connectEthereum({\n        account,\n        contract\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  } else {\n    console.log('Not Dapp browser.');\n  }\n};\n\nconst addArticle = async (dispatch, getState) => {\n  const {\n    account,\n    contract\n  } = getState();\n\n  if (contract && account) {\n    if (window.ethereum) {\n      //const value = window.web3.utils.toWei(valueContent.toString())\n      const content = \"Test3_eth\";\n      const data = contract.methods.addArticle(content).encodeABI(); //await window.web3.eth.sendTransaction({ from: account, value : 0 })\n\n      await window.web3.eth.sendTransaction({\n        from: account,\n        value: 0,\n        data: data\n      }); //await contract.methods.addArticle(\"Test4\").send({from : account, value : 0})\n    } else {\n      await contract.methods.addArticle(\"Test4\").send();\n    }\n  }\n};\n\nexport { connect, addArticle };","map":{"version":3,"sources":["/home/sim/Repos/DecentralizedWiki/decentralized-wikipedia/src/services/Ethereum.js"],"names":["Web3","ContractInterface","connectEthereum","connect","dispatch","window","ethereum","web3","account","enable","contract","eth","Contract","abi","networks","address","from","error","console","log","addArticle","getState","content","data","methods","encodeABI","sendTransaction","value","send"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,OAAO,GAAG,MAAMC,QAAN,IAAkB;AAChC,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;;AACA,QAAI;AACF,YAAM,CAACE,OAAD,IAAY,MAAMH,MAAM,CAACC,QAAP,CAAgBG,MAAhB,EAAxB;AACA,YAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACE,IAAP,CAAYI,GAAZ,CAAgBC,QAApB,CACfX,iBAAiB,CAACY,GADH,EAEfZ,iBAAiB,CAACa,QAAlB,CAA2B,MAA3B,EAAmCC,OAFpB,EAGf;AAAEC,QAAAA,IAAI,EAAER;AAAR,OAHe,CAAjB;AAKAJ,MAAAA,QAAQ,CAACF,eAAe,CAAC;AAAEM,QAAAA,OAAF;AAAWE,QAAAA;AAAX,OAAD,CAAhB,CAAR;AACD,KARD,CAQE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAbD,MAaO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,CAjBD;;AAmBA,MAAMC,UAAU,GAAG,OAAOhB,QAAP,EAAiBiB,QAAjB,KAA8B;AAC/C,QAAM;AAAEb,IAAAA,OAAF;AAAWE,IAAAA;AAAX,MAAwBW,QAAQ,EAAtC;;AAEA,MAAIX,QAAQ,IAAIF,OAAhB,EAAyB;AACxB,QAAIH,MAAM,CAACC,QAAX,EAAqB;AACrB;AACA,YAAMgB,OAAO,GAAG,WAAhB;AACA,YAAMC,IAAI,GAAGb,QAAQ,CAACc,OAAT,CAAiBJ,UAAjB,CAA4BE,OAA5B,EAAqCG,SAArC,EAAb,CAHqB,CAIrB;;AACA,YAAMpB,MAAM,CAACE,IAAP,CAAYI,GAAZ,CAAgBe,eAAhB,CAAgC;AAAEV,QAAAA,IAAI,EAAER,OAAR;AAAiBmB,QAAAA,KAAK,EAAG,CAAzB;AAA4BJ,QAAAA,IAAI,EAAGA;AAAnC,OAAhC,CAAN,CALqB,CAMrB;AACD,KAPC,MAOK;AACF,YAAMb,QAAQ,CAACc,OAAT,CAAiBJ,UAAjB,CAA4B,OAA5B,EAAqCQ,IAArC,EAAN;AACJ;AACC;AACF,CAfD;;AAiBA,SAASzB,OAAT,EAAmBiB,UAAnB","sourcesContent":["import Web3 from 'web3'\nimport ContractInterface from '../build/contracts/Wikipedia.json'\nimport { connectEthereum } from '../store/reducers/root'\n\nconst connect = async dispatch => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum)\n    try {\n      const [account] = await window.ethereum.enable()\n      const contract = new window.web3.eth.Contract(\n        ContractInterface.abi,\n        ContractInterface.networks['5777'].address,\n        { from: account }\n      )\n      dispatch(connectEthereum({ account, contract }))\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    console.log('Not Dapp browser.')\n  }\n}\n\nconst addArticle = async (dispatch, getState) => {\n  const { account, contract } = getState()\n  \n  if (contract && account) {\n  \tif (window.ethereum) {\n\t  //const value = window.web3.utils.toWei(valueContent.toString())\n\t  const content = \"Test3_eth\"\n\t  const data = contract.methods.addArticle(content).encodeABI()\n\t  //await window.web3.eth.sendTransaction({ from: account, value : 0 })\n\t  await window.web3.eth.sendTransaction({ from: account, value : 0, data : data })\n\t  //await contract.methods.addArticle(\"Test4\").send({from : account, value : 0})\n\t} else {\n      await contract.methods.addArticle(\"Test4\").send()\n\t}\n  }\n}\n\nexport { connect , addArticle }\n"]},"metadata":{},"sourceType":"module"}